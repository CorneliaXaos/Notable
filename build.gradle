apply plugin: 'java-library'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    api 'net.xaosdev:ServiceUtils:1.0.0'
}

group GROUP
version VERSION_STRING

sourceCompatibility = 1.8

javadoc {
    title = "Notable v$version Interfaces"
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    group 'documentation'
    description 'Builds a jar file containing the javadoc'

    baseName = 'XaosDev-Notable-Interfaces'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Set Up building for release
publishing {
    publications {
        main(MavenPublication) {
            artifactId = 'interfaces'
            from components.java
            artifact javadocJar
            pom {
                name = 'Notable Interfaces'
                description = 'An API / SPI containing archive for the Notable Notebook editor.'
                url = 'https://github.com/CorneliaXaos/Notable'
                license {
                    name = 'The Apache License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
                developers {
                    developer {
                        id = 'corneliaxaos'
                        name = 'Cornelia Ada Schultz'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:CorneliaXaos/Notable.git'
                    developerConnection = 'scm:git:git@github.com:CorneliaXaos/Notable.git'
                    url = 'https://github.com/CorneliaXaos/Notable'
                }
            }
        }
    }
}
// requires argument -Pv=<string>
task bumpVersion {
    group 'clerical'
    description 'Bumps the version information project wide.'

    doFirst {
        // Make sure we have valid parameters
        String ver
        try {
            ver = "$v"
            if (!ver.matches(/\d+\.\d+\.\d+/)) {
                throw new Exception()
            }
        } catch (Throwable t) {
            throw new InvalidUserDataException('Version parameter not provided or incorrect: -Pv=\\d+\\.\\d+\\.\\d+', t)
        }

        File file = new File(projectDir.path + '/gradle.properties')
        String contents = file.getText('UTF-8')

        // Update VERSION_STRING by replacement
        contents = contents.replaceAll(/VERSION_STRING=\d+\.\d+\.\d+/, "VERSION_STRING=$ver")

        file.write(contents)
    }
}